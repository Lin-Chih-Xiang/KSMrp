<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAD///8A+/f3AP/7+wD7+/sA0sLCANfGxgDf19cA18LGANfCwgD79/sA9/f3ANvKygDj398A39LSAOff
        3wDfzs4A0r7CAOPb2wDn4+MA6+PjANK+vgDr5+cA49fXAM6+vgDv6+sA187OANvGygD/9/cA8+/vANvO
        zgDbxsYA0sbGAPPz8wDfysoA18bCAP/3+wDb0tIA+/P3AM7CwgDf29sA18rKAPfz8wDn5+cA7+/vANLC
        vgDr398A9/fzAOfb2wD/+/8A49/bAN/S1wDOvsIA0srKANLCxgDv5+cA49LSANvKzgDr6+sA///7APv7
        9wDv5+sA7+PjAPPr7wDj0tcAzr66AM7GxgD37+8Azrq+AOff4wDXvsIA39fSAOvn6wBNQUEA49fSAMq+
        vgDbysYA38rOANvX1wDr4+cA49vfAOPb1wDn498Axra2APPr6wDSxsIA39vXAPfv8wBtXV0ATT09AFFB
        QQDv7+sA29LOAN/O0gDXxsoAopKSAN/OygDn19sAzsbKAPf7+wDn19cAtqqqANvCygDbwsYAdWVlAFlN
        SQDr29sAZVVVAL6qqgDv398A7+PnAO/r7wDb19IAyrq6AIp1dQDj19sAno6KAIZ1dQCmmpoA59vfAKaW
        lgDr39sA//P3ANfX0gCKfX0A6+/vAL6mogBpVVUAysbCAPPv6wD7//8A9/v3AOvn4wBVRUUA+//7AMK2
        tgB5aWkA+/fzAJqKigCqmpoA5+fjAM66tgC6rqoAcWVpAFlRUQCCcXEA39LOANfO0gDr298AspqaAPf3
        +wBtYV0ATUE9AJaGggCyoqIA6+PfAOPj4wCikooAxrq+AIp5dQBlVVEASTk5APPz7wDCsrIA59vXAMay
        rgD38/cAno6OAMrCwgDr7+sA29vbAJ6WkgCWioYAqpqWAP/3/wBVRUEAzsrGAPv7/wDKurYAcWllAHlt
        bQDKvsIAzsrKAJaCggDn6+sA79/jAMa+ugC2pqYAtqKeAKqWmgBJPUEAxr6+AK6WkgDn4+cA39vfAOPj
        3wDCsq4AeWVhAKqWlgBpXV0AST09AMa2ugDbztIA18LKANvOygBdUU0AsqaqALKingBhUU0AWUlJAGFV
        VQC6pqYAxrq6ANfSzgCGfX0AUUFFAL62tgB1aWkAnoaGAIJtbQCuoqIAZVFRAEU5OQC+srIAxq6uAJqO
        jgCakpIAloaGAFFFQQDGurIAcWVhAJJ9fQCypqYAwq6uAHVhYQBdTU0A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A3d3d3d3d3d3d3d3d193d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d2yQfJGlk3d3d3d3d
        3d3d3d3d3d3d3d3d3d3d3d3dZB8fWzQ3CSARJN3d3d3d3d3d3d3d3d3d3d3d3d3d1DQEGgskBDcDCQk7
        10Qm3d3d3d3d3d3d3d3d3d3d3d3kBAQEBDcXNwMgOzsgJRMRa93d3d3d3d3d3d3d3d3d3VIEBAQENxcD
        ZAk7ICU7JQkDF2nd3d3d3d3d3d3d3d3d1ywEBAQkF7UDA3rUJSU7JQMDA6kT3d3d3d3d3d3d3d3XBBcE
        EMnIN3sDAwMDJqkDAwMDJRPd3d3d3d3d3d3d3XUEFwQfJBc3ERFNznoDAwO1egMJPd3d3d3d3d3d3d3d
        dRQsJhTJnTQsNzdyUCRTewMDA3oT3d3d3d3d3d3d3d1kBBcQBAsXBOqEhOp9NzcRaTcmf3rd3d3d3d3d
        3d3d3WQEFwRdNMgLJBFk6oTq6oRee3Nrad3d3d3d3d3d3d3dZAQXBAQLyATcUjc3NzcTic9zpAsT3d3d
        3d3d3d3d3d1kFBcEBAsXBISE6oRYWHsPaZoLabjd3d3d3d3d3d3d3WQEFwQECxcLCTzbzK6EhGjqe4os
        u93d3d3d3d3d3d3dZAQXFAQLjNmZN1LXUhMXC1NdLBFz3d3d3d3d3d3d3d1kBCwQBAtSJmF/ORMlUzwT
        PBM01xfd3d3d3d3d3d3d3WQsFxAECxcECSAlICAlJSUDOwM7ad3d3d3d3d3d3d3dZAQULAQaQwQlJSUl
        JSAlJTsgAyVQ3d3d3d3d3d3d3d1kBBQEBAvIJiUlJSUlICA7OwM7OxHd3d3d3d3d3d3d3WQEFwQQHsgm
        JSAJOyAlJSUlOwMJUN3d3d3d3d3d3d3dmSwXEAQEQyYlIAkgJSUJJTs7AyU33d3d3d3d3d3d3d3nLBQQ
        FBpSJiAlJSUgIAklJSAlJWnd3d3d3d3d3d3d3ecEFyYEC0MmCSUgJSUlJSUDIDsJEd3d3d3d3d3d3d3d
        mQQXFBceFyY7JSUlICUlJTslOyVQ3d3d3d3d3d3d3d3NFxRDEDQXBCA7JSUlJSUlOzsgJRHd3d3d3d3d
        3d3d3ecXQxAQC8hdAyUlJSUgCSU7OyUlEd3d3d3d3d3d3d3dzhcXBAQLFyY7ICUlICUlCQMJCVsR3d3d
        3d3d3d3d3d3nLBcQEAtSJjslJSAlJZ1QRGkTF93d3d3d3d3d3d3d3dcEFAQUC50XExc3ETc3193d3d3d
        3d3d3d3d3d3d3d3d3d3dIGsLyBcRyJLd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3f/3////wP///wA///wAB//8AAH//AAAf/wAAB/8AAAf/AAAH/wAAB/8AAAf/AAAH/wA
        AB/8AAAf/AAAH/wAAB/8AAAf/AAAH/wAAB/8AAAf/AAAH/wAAB/8AAAf/AAAH/wAAB/8AAAf/AAAH/wA
        AB/8AAA//AAH//+Af///////
</value>
  </data>
</root>